" ~/Projects/dotfiles/vim/sessions/alien-sync.vim:
" Vim session script.
" Created by session.vim 2.7 on 18 October 2014 at 12:56:38.
" Open this file in Vim and run :source % to restore your session.

set guioptions=+c
silent! set guifont=Ubuntu\ Mono\ derivative\ Powerline\ 11
if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
call setqflist([])
let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Projects/alien-sync
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +11 backend/modules/AlienSync/BackendPlugin.cpp
badd +7 backend/modules/AlienSync/BackendPlugin.h
badd +70 backend/modules/AlienSync/SubredditListModel.h
badd +1 backend/modules/AlienSync/SubredditListModel.cpp
badd +11 backend/CMakeLists.txt
badd +76 app/ui/HomePage.qml
badd +45 app/components/LoadingIndicator.qml
badd +93 app/alien-sync.qml
badd +53 app/ui/SettingsPage.qml
badd +37 app/components/SortPanel.qml
badd +41 app/components/EntryListItem.qml
badd +14 app/CMakeLists.txt
badd +69 CMakeLists.txt
badd +6 app/ui/CMakeLists.txt
badd +6 app/components/CMakeLists.txt
badd +6 cmake/Click.cmake
badd +3 app/graphics/CMakeLists.txt
badd +5 app/alien-sync.desktop.in
badd +7 app/components/FlowView.qml
badd +5 app/components/MediaView.qml
badd +30 backend/modules/AlienSync/RedditAccount.h
badd +71 backend/modules/AlienSync/RedditAccount.cpp
badd +1 backend/modules/AlienSync/RedditApi.h
badd +3 backend/modules/AlienSync/RedditApi.cpp
badd +17 backend/modules/AlienSync/ConnectionManager.h
badd +8 backend/modules/AlienSync/ConnectionManager.cpp
argglobal
silent! argdel *
edit backend/modules/AlienSync/SubredditListModel.cpp
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
let s:l = 1 - ((0 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 017|
tabnext 1
if exists('s:wipebuf')
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

1wincmd w
tabnext 1
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
