" ~/.vim/sessions/saucybacon.vim:
" Vim session script.
" Created by session.vim 2.4.9 on 14 May 2014 at 11:40:04.
" Open this file in Vim and run :source % to restore your session.

set guioptions=+c
silent! set guifont=Ubuntu\ Mono\ derivative\ Powerline\ 11
if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'atom' | colorscheme atom | endif
call setqflist([])
let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Projects/saucybacon
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +37 CMakeLists.txt
badd +1 build/cmake_install.cmake
badd +57 app/saucybacon.qml
badd +60 app/ui/RecipePageToolbar.qml
badd +17 app/ui/dialogs/DeleteDialog.qml
badd +58 app/backend/Recipe.qml
badd +306 app/ui/RecipePage.qml
badd +69 app/backend/prototypes.js
badd +60 app/components/TimePicker.qml
badd +30 app/components/PhotoLayout.qml
badd +300 backend/modules/SaucyBacon/RecipeParser.cpp
badd +37 app/components/IngredientInput.qml
badd +74 app/components/IngredientLayout.qml
badd +42 app/ui/dialogs/NewCategoryDialog.qml
badd +151 app/ui/SearchPage.qml
badd +10 app/CMakeLists.txt
badd +210 app/ui/EditPage.qml
badd +145 app/ui/HomePage.qml
badd +28 app/models/BaseModel.qml
badd +4 app/backend/sync.js
badd +118 app/components/SquareListItem.qml
badd +181 app/ui/NewRecipePage.qml
badd +89 app/components/Sidebar.qml
badd +1 backend/modules/SaucyBacon/Utils.cpp
badd +69 backend/modules/SaucyBacon/Utils.h
silent! argdel *
edit app/saucybacon.qml
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
" argglobal
let s:l = 121 - ((63 * winheight(0) + 36) / 73)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
121
normal! 025|
lcd ~/Projects/saucybacon
tabnext 1
if exists('s:wipebuf')
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

tabnext 1
1wincmd w
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
