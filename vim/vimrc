" gcollura's vimrc

if &compatible
    set nocompatible " Be iMproved
endif
filetype off

let g:vim_dir = expand('<sfile>:p:h')
let g:bundle_dir = g:vim_dir . '/bundle/'
let s:neobundle_dir = g:bundle_dir . 'neobundle.vim/'

function! s:source(file)
    if !exists(a:file)
        execute 'source' fnameescape(a:file)
    endif
endfunction

runtime plugin/utils.vim

if has('vim_starting')
    if !isdirectory(s:neobundle_dir)
        " install neobundle submodule
        echom 'Updating submodules to install neobundle.vim'
        let cwd = getcwd()
        execute 'lcd' fnameescape(g:vim_dir)
        echom system('git submodule update --init')
        echom system('git pull --recurse-submodules')
        execute 'lcd' fnameescape(cwd)
    endif
    let &runtimepath .= ',' . s:neobundle_dir
endif

""" Files and backup

" History size
set history=100

" Saving and reloading
set confirm
set autoread
set hidden

" Autosave
au FocusLost * silent! wa

" Encoding
set encoding=utf-8
" Default fileformat.
set fileformat=unix
" Automatic recognition of a new line cord.
set fileformats=unix,dos,mac

" Persistent undo
let &undodir = g:vim_dir . '/undo/' " Where to save undo(s)
call utils#putdir(&undodir)
set undofile " Save undo when switching buffer or closing files

" Swap files
let &directory = g:vim_dir . '/swap/'
let &backupdir = g:vim_dir . '/swap/'
call utils#putdir(&directory)

" Folding
set foldmethod=indent " Convenient with C++
set nofoldenable " Folding disable by default

""" Editing

" Indentation/tab settings
set autoindent
set smartindent

if has('patch-7.4.338')
    set breakindent
endif
set showbreak=\ \

set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set smarttab

" Change the way backslashes are used in search patterns
set magic

" Turn off word wrapping
set nowrap

" Sane backspace behaviour
set backspace=indent,eol,start

" Set default clipboard
set clipboard+=unnamedplus

" Mouse
set mouse=a

""" Spell Checking

set nospell
set spelllang=en
set spellsuggest=5

""" Completion

set wildmenu
"stuff to ignore when tab completing
set wildignore=*.o,*.png,*.gif,*.jpg,*.jpeg,*.zip,*.jar,*.gem,coverage/**,log/**,*.pyc,*~,build/**

""" Search

set hlsearch
set incsearch
set ignorecase
set smartcase
set gdefault


""" Display

set lazyredraw
set laststatus=2
" Hide show mode while using airline
set noshowmode
" Enable modelines
set modeline

set regexpengine=1

" Do not display completion messages
" Patch: https://groups.google.com/forum/#!topic/vim_dev/WeBBjkXE8H8
if has('patch-7.4.314')
	set shortmess+=c
endif

" Numbers
set number
set relativenumber
set numberwidth=5

set scrolloff=4

" Highlight current line
set cursorline

" Column
set textwidth=90
set colorcolumn=+1

" Session options
set sessionoptions=buffers,curdir,tabpages,unix

set pastetoggle=<F9>

if has("win32") || has("win64")
    set shellslash
endif

" Load configurations
call s:source(g:vim_dir . '/bundles.vim')
call s:source(g:vim_dir . '/mappings.vim')
call s:source(g:vim_dir . '/filetype.vim')

" Syntax highlighting and colorscheme
syntax on
if !has("gui_running")
    set t_Co=256
    let base16colorspace = 256
endif
set background=dark
colorscheme base16-monokai
let g:airline_theme = 'base16'
